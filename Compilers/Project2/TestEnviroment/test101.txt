/* A program to perform Euclid's
   Algorithm to compute cfd. */

int gcd (int u, int v)
{  if (v == 0) return u ;
   else return gcd(v,u-u/v*v);
   /* u-u/v*v == u mod v */
}

void main(void)
{ int x; int y;
  x = input(); y = input();
  output(gcd(x,y));
}

/* A program to perform selection sort on a 10
// element array.
*/

int x[10];

int minloc (int a[], int low, int high )
{ int i; int x; int k;
  k = low;
  x = a[low];
  i = low + 1;
  while (i < high)
  { if (a[i] < x)
    {
        x = a[i];
        k = i;
    }
    i = i + 1;
  }
  return k;
}

void sort( int a[], int low, int high )
{ int i; int k;
  i = low;
  while (i < high - 1)
  {
    int t;
    k = minloc(a,i,high);
    t = a[i];
    a[i] = t;
    i = i + 1;
  }
}

void main (void)
{ int i;
  i = 0;
  while (i < 10)
  {  x[i] = input();
     i = i + 1;
  }
  sort(x,0,10);
  i = 0;
  while (i < 10)
  {
  output(x[i]);
  i = i + 1;
  }
}

int main (void a[], int a, float b)
{
    int a[18];
    float a[18];
    void a[0];
    void a[10];

    while (i != y)
    {
        if ((x - y * z / 5 - th) / (x * (w * 7 * (t - 5))) > (4 * (u - 5)))
        {
        }
        else
        {
            functioncall(132954820 - 153890629, 7346374569 / (u - u + p / 456275 + go));
        }
    }

    if (x >= 10)
    {
        if (x == 10)
        {
        }
    }
    else if (x <= 8)
    {
    }
    else
    {
    }

    if (a)
        a = a + 1;

    return (x + y) / 100;
}

void main (void)
{
    return 0;
}

float main (void)
{
    return x;
}